name: Build and Deploy to VPS

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [repository_dispatch]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/receipt-extractor-server:latest ./server
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/receipt-extractor-server:latest
      - name: Create client .env file
        run: |
          echo "${{ secrets.CLIENT_ENV }}" > client/.env.production
      - name: Build and push client image
        run: |
          docker build \
            --build-arg CLIENT_ENV_FILE=.env.production \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/receipt-extractor-client:latest ./client
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/receipt-extractor-client:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
      - name: Deploy on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "\
            docker login -u '${{ secrets.DOCKERHUB_USERNAME }}' -p '${{ secrets.DOCKERHUB_TOKEN }}' && \
            cd ~/receipt-extractor && \
            echo '${{ secrets.SERVER_ENV }}' > server/.env.production && \
            echo '${{ secrets.CLIENT_ENV }}' > client/.env.production && \
            docker compose -f docker-compose.prod.yml pull && \
            docker compose -f docker-compose.prod.yml up -d"
